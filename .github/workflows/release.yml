name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.lock') }}
          components: clippy, rustfmt
          target: ${{ matrix.target }}

      - name: Build library
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="libredis_shield"

          if [ "${{ matrix.os }}" = "macos-latest" ]; then
              ext="dylib"
          else
              ext="so"
          fi

          tar -czf "redis-shield-$VERSION-${{ matrix.target }}.tar.gz" "target/${{ matrix.target }}/release/$binary_name.$ext"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV

      - name: Upload asset
        uses: softprops/action-gh-release@v2
        with:
          append_body: true
          make_latest: true
          files: |
            ${{ env.ASSET }}
