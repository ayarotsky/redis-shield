name: Code Review

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUST_BACKTRACE: "1"
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install redis
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "7.x"

      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.lock') }}
          components: clippy, rustfmt

      - name: Cache cargo tools
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: cargo-tools-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo dependencies
        run: |
          for crate in cargo-deny cargo-pants cargo-audit cargo-auditable; do
            if ! command -v "$crate" >/dev/null 2>&1; then
              echo "Installing $crate..."
              cargo install --quiet "$crate"
            else
              echo "$crate already installed, skipping."
            fi
          done

      - name: Run cargo checks
        run: |
          cargo clippy &
          cargo fmt --all -- --check &
          cargo deny check &
          wait
          cargo pants

      - name: Build SHIELD module
        run: cargo auditable build --target x86_64-unknown-linux-gnu

      - name: cargo audit
        run: |
          rm -rf ~/.cargo/advisory-db
          cargo audit

      - name: Start Redis with SHIELD module
        run: |
          redis-server \
            --port 34567 \
            --loadmodule target/x86_64-unknown-linux-gnu/debug/libredis_shield.so \
            --daemonize yes
          sleep 2
          redis-cli -p 34567 ping

      - name: Run tests
        env:
          REDIS_URL: redis://127.0.0.1:34567/1
        run: cargo test --quiet

  commitlint:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: wagoid/commitlint-github-action@v6
