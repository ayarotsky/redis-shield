name: Code Review

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RUST_BACKTRACE: "1"
  REDIS_URL: redis://localhost:34567/1

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install redis
        run: sudo apt-get install -y redis-server

      - name: Configure cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy, rustfmt
          profile: minimal

      # - name: Install linters
      #   run: |
      #     cargo install --locked cargo-deny || true
      #     cargo install --locked cargo-outdated || true
      #     cargo install --locked cargo-udeps || true
      #     cargo install --locked cargo-audit || true
      #     cargo install --locked cargo-pants || true

      - run: cargo check

      - run: cargo build --target x86_64-unknown-linux-gnu

      - run: cargo clippy -- -D warnings
      - run: cargo fmt --all -- --check

      # - run: cargo deny check
      #   if: always()

      # - run: cargo outdated --exit-code 1
      #   if: always()

      # - run: cargo udeps
      #   if: always()

      # - run: cargo audit
      #   if: always()

      # - run: cargo pants
      #   if: always()

      - name: Start redis with SHIELD module
        run: |
          redis-server \
            --port 34567 \
            --loadmodule target/x86_64-unknown-linux-gnu/debug/libredis_shield.so \
            --daemonize yes

      - run: cargo test

      - name: Cleanup
        if: always()
        run: rm -rf ~/.cargo/advisory-db

  commitlint:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: wagoid/commitlint-github-action@v5
